<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd" default-autowire="byType">

    <bean id="shibboleth.TaskTimer" class="java.util.Timer" destroy-method="cancel">
        <constructor-arg value="true" type="boolean" />
    </bean>

    <bean id="shibboleth.VelocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean" >
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">classpath, string</prop>
                <prop key="classpath.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </prop>
                <prop key="string.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.StringResourceLoader
                </prop>
            </props>
        </property>
    </bean>

    <bean id="shibboleth.TemplateEngine" class="edu.internet2.middleware.shibboleth.common.attribute.resolver.provider.dataConnector.TemplateEngine" lazy-init="true">
        <constructor-arg ref="shibboleth.VelocityEngine" />
    </bean>
    
    <bean id="shibboleth.ParserPool" class="org.opensaml.xml.parse.BasicParserPool">
        <property name="maxPoolSize" value="50" />
        <property name="createBuildersAtPoolLimit" value="true" />
        <property name="coalescing" value="true" />
        <property name="ignoreComments" value="true" />
        <property name="ignoreElementContentWhitespace" value="true"/>
        <property name="namespaceAware" value="true" />
    </bean>

    <bean id="shibboleth.AttributeFilterEngine" class="edu.internet2.middleware.shibboleth.common.attribute.filtering.provider.ShibbolethAttributeFilteringEngine" init-method="initialize">
        <constructor-arg ref="shibboleth.TaskTimer" />
        <constructor-arg>
            <list>
                <bean id="policy" class="org.opensaml.resource.ClasspathResource">
                    <constructor-arg value="/data/edu/internet2/middleware/shibboleth/common/attribute/filtering/policy3.xml" />
                </bean>
            </list>
        </constructor-arg>
        <constructor-arg value="10000" type="long" />
        <constructor-arg value="5" type="int" />
    </bean>
    
    <bean id="shibboleth.AttributeResolver" class="edu.internet2.middleware.shibboleth.common.attribute.resolver.provider.ShibbolethAttributeResolver" init-method="initialize">
        <constructor-arg type="java.util.List">
            <list>
                <bean id="resolver" class="org.opensaml.resource.ClasspathResource">
                    <constructor-arg value="/data/edu/internet2/middleware/shibboleth/common/config/resolver/resolver.xml" />
                </bean>
            </list>
        </constructor-arg>
    </bean>
    
    <bean id="shibboleth.SAML1AttributeAuthority" class="edu.internet2.middleware.shibboleth.common.attribute.provider.ShibbolethSAML1AttributeAuthority">
        <constructor-arg ref="shibboleth.AttributeResolver" />
        <!-- property name="filteringEngine" ref="shibboleth.AttributeFilterEngine" /-->
    </bean>
    
    <bean id="shibboleth.SAML2AttributeAuthority" class="edu.internet2.middleware.shibboleth.common.attribute.provider.ShibbolethSAML2AttributeAuthority">
        <constructor-arg ref="shibboleth.AttributeResolver" />
        <!-- property name="filteringEngine" ref="shibboleth.AttributeFilterEngine" /-->
    </bean>
    
</beans>