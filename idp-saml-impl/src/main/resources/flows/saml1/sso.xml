<?xml version="1.0" encoding="UTF-8"?>

<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
    
    <action-state id="InitializeProfileRequestContext">
       <transition on="proceed" to="DecodeIdpInitiatedSsoMessage" />
    </action-state>
    
    <action-state id="DecodeIdpInitiatedSsoMessage">
        <transition on="proceed" to="CheckSaml1IsRequest"/>
    </action-state>
    
    <action-state id="CheckSaml1IsRequest">
        <transition on="proceed" to="CheckMandatoryIssuer"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="CheckMandatoryIssuer">
        <transition on="proceed" to="CheckMessageLifetime"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="CheckMessageLifetime">
        <transition on="proceed" to="CheckReplayedMessage"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="CheckReplayedMessage">
        <transition on="proceed" to="AddSamlMetadataToInboundMessageContext"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <!-- Action could be added here that sent user back to SP if message replayed -->
    
    <action-state id="AddSamlMetadataToInboundMessageContext">
        <transition on="proceed" to="AddRelyingPartyConfigurationToProfileRequestContext"/>
        <transition on="error" to="DisplayError" />
    </action-state>
    
    <action-state id="AddRelyingPartyConfigurationToProfileRequestContext">
        <transition on="proceed" to="CheckProfileIsSupported"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="CheckProfileIsSupported">
        <transition on="proceed" to="GenerateOutboundMessageContext"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="GenerateOutboundMessageContext">
        <transition on="proceed" to="DetermineAuthenticationRequirements"/>
        <transition on="error" to="DisplayError" />
    </action-state>
    
    <action-state id="AddSamlMetadataToOutboundMessageContext">
        <transition on="proceed" to="DetermineAuthenticationRequirements"/>
        <transition on="error" to="DisplayError" />
    </action-state>
    
    <action-state id="DetermineAuthenticationRequirements">
        <transition on="proceed" to="AuthenticateUser"/>
        <transition on="error" to="DisplayError" />
    </action-state>
    
    <!-- This will programatically invoke a subflow for the chosen authentication mechanism -->
    <action-state id="AuthenticateUser">
        <transition on="proceed" to="CheckAuthenticationResults"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="CheckAuthenticationResults">
        <transition on="proceed" to="UpdateSessionWithAuthenticationInformation"/>
        <transition on="error" to="DisplayError" />
    </action-state>
    
    <action-state id="UpdateSessionWithAuthenticationInformation">
        <transition on="proceed" to="ResolveAttributes"/>
        <transition on="error" to="DisplayError" />
    </action-state>
    
    <action-state id="ResolveAttributes">
        <transition on="proceed" to="FilterAttributes"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="FilterAttributes">
        <transition on="proceed" to="RequestAttributeConsent"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <subflow-state id="RequestAttributeConsent">
        <transition on="proceed" to="GenerateResponse" />
        <transition on="error" to="GenerateErrorResponse" />
    </subflow-state>
    
    <action-state id="GenerateResponse">
        <transition on="proceed" to="AddRecipientToResponse"/>
    </action-state>
    
    <action-state id="AddRecipientToResponse">
        <transition on="proceed" to="AddInResponseToToResponse"/>
    </action-state>
    
    <action-state id="AddInResponseToToResponse">
        <transition on="proceed" to="AddAuthenticationStatementToAssertion"/>
    </action-state>
    
    <action-state id="AddAuthenticationStatementToAssertion">
        <transition on="proceed" to="AddAttributeStatementToAssertion"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="AddAttributeStatementToAssertion">
        <transition on="proceed" to="AddSubjectToStatements"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="AddSubjectToStatements">
        <transition on="proceed" to="AddNotBeforeConditionToAssertions"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="AddNotBeforeConditionToAssertions">
        <transition on="proceed" to="AddNotOnOrAfterConditionToAssertions"/>
    </action-state>
    
    <action-state id="AddNotOnOrAfterConditionToAssertions">
        <transition on="proceed" to="AddAudienceRestrictionsToAssertions"/>
    </action-state>
    
    <action-state id="AddAudienceRestrictionsToAssertions">
        <transition on="proceed" to="SignAssertions"/>
    </action-state>
    
    <action-state id="SignAssertions">
        <transition on="proceed" to="SignResponse"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="SignResponse">
        <transition on="proceed" to="EncodeResponse"/>
        <transition on="error" to="GenerateErrorResponse" />
    </action-state>
    
    <action-state id="GenerateErrorResponse">
        <transition on="proceed" to="EncodeResponse"/>
        <transition on="error" to="DisplayError" />
    </action-state>
    
    <action-state id="EncodeResponse">
        <transition on="proceed" to="done"/>
        <transition on="error" to="DisplayError" />
    </action-state>
    
    <view-state id="DisplayError">
        <transition to="done" />
    </view-state>
    
    <end-state id="done" />
        
</flow>