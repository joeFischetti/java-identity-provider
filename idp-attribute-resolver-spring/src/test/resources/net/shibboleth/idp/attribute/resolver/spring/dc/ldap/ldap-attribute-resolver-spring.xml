<?xml version="1.0" encoding="UTF-8"?>
<resolver:AttributeResolver 
                            xmlns="http://www.springframework.org/schema/beans"
                            xmlns:p="http://www.springframework.org/schema/p"
                            xmlns:resolver="urn:mace:shibboleth:2.0:resolver" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
                            xmlns:dc="urn:mace:shibboleth:2.0:resolver:dc" xmlns:enc="urn:mace:shibboleth:2.0:attribute:encoder" 
                            xsi:schemaLocation="urn:mace:shibboleth:2.0:resolver classpath:/schema/shibboleth-2.0-attribute-resolver.xsd
                                               urn:mace:shibboleth:2.0:resolver:dc classpath:/schema/shibboleth-2.0-attribute-resolver-dc.xsd">

    <resolver:DataConnector id="myLDAP" xsi:type="dc:LDAPDirectory">
      <beans>
        <bean class="org.ldaptive.pool.PooledConnectionFactory">
          <property name="connectionPool">
            <bean class="org.ldaptive.pool.BlockingConnectionPool"
                  init-method="initialize"
                  p:blockWaitTime="5000">
              <constructor-arg index="0">
                <bean class="org.ldaptive.pool.PoolConfig"
                      p:minPoolSize="5"
                      p:maxPoolSize="10"
                      p:validatePeriodically="true"
                      p:validatePeriod="900"/>
              </constructor-arg>
              <constructor-arg index="1">
                <bean class="org.ldaptive.DefaultConnectionFactory">
                  <property name="provider">
                    <bean class="org.ldaptive.provider.jndi.JndiProvider">
                      <property name="providerConfig">
                        <bean class="org.ldaptive.provider.jndi.JndiProviderConfig">
                          <property name="properties">
                            <map>
                              <entry key="name1" value="value1"/>
                              <entry key="name2" value="value2"/>
                            </map>
                          </property>
                        </bean>
                      </property>
                    </bean>
                  </property>
                  <property name="connectionConfig">
                    <bean class="org.ldaptive.ConnectionConfig"
                          p:ldapUrl="ldap://localhost:10389"
                          p:useStartTLS="true">
                      <property name="connectionInitializer">
                        <bean class="org.ldaptive.BindConnectionInitializer"
                              p:bindDn="cn=Directory Manager"
                              p:bindCredential="password"/>
                      </property>
                      <property name="sslConfig">
                        <bean class="org.ldaptive.ssl.SslConfig">
                          <property name="credentialConfig">
                            <bean class="org.ldaptive.ssl.X509CredentialConfig"
                                  p:trustCertificates="file:src/test/resources/net/shibboleth/idp/attribute/resolver/spring/dc/ldap/server.crt"
                                  p:authenticationCertificate="file:src/test/resources/net/shibboleth/idp/attribute/resolver/spring/dc/ldap/client.crt"
                                  p:authenticationKey="file:src/test/resources/net/shibboleth/idp/attribute/resolver/spring/dc/ldap/client.pkcs8"/>
                          </property>
                        </bean>
                      </property>
                    </bean>
                  </property>
                </bean>
              </constructor-arg>
              <property name="validator">
                <bean class="org.ldaptive.pool.SearchValidator">
                  <property name="searchRequest">
                    <bean class="org.ldaptive.SearchRequest">
                      <constructor-arg value="dc=shibboleth,dc=net"/>
                      <constructor-arg value="(ou=people)"/>
                    </bean>
                  </property>
                </bean>
              </property>
              <property name="pruneStrategy">
                <bean class="org.ldaptive.pool.IdlePruneStrategy"
                       p:prunePeriod="300"
                       p:idleTime="600"/>
              </property>
            </bean>
          </property>
        </bean>
        <bean class="org.ldaptive.SearchExecutor"
              p:baseDn="ou=people,dc=shibboleth,dc=net">
          <property name="searchFilter">
            <bean class="org.ldaptive.SearchFilter"
                  p:filter="(uid=${recipientContext.principal})"/>
          </property>
        </bean>
        <bean id="cacheBuilder"
              class="com.google.common.cache.CacheBuilder"
              factory-method="from">
            <constructor-arg value="expireAfterAccess=10s,maximumSize=25"/>
        </bean>
        <bean id="cache"
              class="com.google.common.cache.Cache"
              factory-bean="cacheBuilder"
              factory-method="build"/>
        <bean class="net.shibboleth.idp.attribute.resolver.impl.dc.ldap.TemplatedExecutableSearchFilterBuilder"
              p:templateText="(uid=${recipientContext.principal})"
              p:velocityEngine-ref="shibboleth.VelocityEngine"
              init-method="initialize" />
        <import resource="classpath:/net/shibboleth/idp/attribute/resolver/spring/velocity.xml"/>
      </beans>
    </resolver:DataConnector>    
</resolver:AttributeResolver>
