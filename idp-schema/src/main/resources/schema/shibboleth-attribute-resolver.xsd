<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:resolver="urn:mace:shibboleth:2.0:resolver"
    targetNamespace="urn:mace:shibboleth:2.0:resolver" elementFormDefault="qualified"
    version="3.0">

    <import namespace="http://www.w3.org/XML/1998/namespace"
        schemaLocation="http://www.w3.org/2001/xml.xsd" />

    <annotation>
        <documentation>Shibboleth 2.0 Attribute Resolver configuration schema
        </documentation>
    </annotation>

    <element name="AttributeResolver" type="resolver:AttributeResolverType">
        <annotation>
            <documentation>Root of the attribute resolver configuration file.
            </documentation>
        </annotation>
    </element>
    <complexType name="AttributeResolverType">
        <choice minOccurs="0" maxOccurs="unbounded">
            <element ref="resolver:AttributeDefinition" />
            <element ref="resolver:DataConnector" />
            <element ref="resolver:PrincipalConnector" />
        </choice>
        <attribute name="id" type="string">
            <annotation>
                <documentation>A unique identifier for this Resolver.
                </documentation>
            </annotation>
        </attribute>
    </complexType>

    <element name="AttributeDefinition" type="resolver:FlattenedBaseAttributeDefinitionType">
        <annotation>
            <documentation>Defines an attribute definition within this resolver.
            </documentation>
        </annotation>
    </element>

    <complexType name="FlattenedBaseAttributeDefinitionType">
        <annotation>
            <documentation>
                Attribute definition define the finished attributes to be released by the
                resolver.
                
                Definitions derived from this type need to explicitly include (as a choice)
                the Dependency, DisplayName, DisplayDescription and Encoder sub elements
                
                Definitions derived from this type may add the sourceAttributeID element.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseResolutionPlugInType">
                <attribute name="dependencyOnly" type="string">
                    <annotation>
                        <documentation>
                            A boolean flag that indicates whether this attribute definition is
                            only defined because its data is needed elsewhere within the resolver
                            and as such should not be released outside the resolver.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="BaseAttributeDefinitionType">
        <annotation>
            <documentation>
                Legacy attribute definition define the finished attributes to be released by the
                resolver.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                    <element name="DisplayName" type="resolver:LocalizedStringType"
                        minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <documentation>
                                A human readable name of for this attribute. This name may, for
                                example, be displayed to the user with an attribute release approval
                                request.

                                If multiple display names are used they should bear an xml:lang
                                attribute to distinguish them.
                            </documentation>
                        </annotation>
                    </element>
                    <element name="DisplayDescription" type="resolver:LocalizedStringType"
                        minOccurs="0" maxOccurs="unbounded">
                        <annotation>
                            <documentation>
                                A human readable description of for this attribute. This name
                                may, for example, be displayed to the user with an attribute release
                                approval request.

                                If multiple display descriptions are used they should bear an
                                xml:lang attribute to distinguish them.
                            </documentation>
                        </annotation>
                    </element>
                    <element ref="resolver:AttributeEncoder" minOccurs="0"
                        maxOccurs="unbounded" />
                </sequence>
                <attribute name="sourceAttributeID" type="string">
                    <annotation>
                        <documentation>
                            The name of the attribute from a data connector dependency which should be
                            used to populate this attribute definition.
                            
                            Whether this attribute is required or optional depends on whether the dependency
                            set contains data connectors or attribute definitions. It may be left out for
                            attribute dependencies but MUST be set if there are data connector dependencies.
                            
                            This was a flawed schema design and may eventually be altered.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <element name="AttributeEncoder" type="resolver:BaseAttributeEncoderType">
        <annotation>
            <documentation>Defines an encoder for an attribute.</documentation>
        </annotation>
    </element>
    <complexType name="BaseAttributeEncoderType">
        <annotation>
            <documentation>
                An attribute encoder is responsible for converting an attribute, and it's values,
                into a protocol specific representation such as a SAML 1 Attribute or a SAML 2 NameID.
            </documentation>
        </annotation>
        <attribute name="name" type="string" />
        <attribute name="encodeType" type="string">
            <annotation>
                <documentation>
                    A boolean indicating whether the encoding should include type information. This is
                    encoding-specific (e.g., for XML it likely involves xsi:type).
                </documentation>
            </annotation>
        </attribute>
        <attribute name="activationConditionRef" type="string">
            <annotation>
                <documentation>
                    The reference to a Predicate which controls whether this encoder will run
                </documentation>
            </annotation>
        </attribute>
    </complexType>

    <element name="DataConnector" type="resolver:BaseDataConnectorType">
        <annotation>
            <documentation>
                Defines a data connector which is used to pull information from local
                infrastructure.
            </documentation>
        </annotation>
    </element>
    <complexType name="BaseDataConnectorType">
        <annotation>
            <documentation>
                Data connectors pull information from local infrastructure, such as
                databases and LDAP directories, and make these raw attributes available
                to attribute definitions for finishing.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseResolutionPlugInType">
                <sequence>
                    <element ref="resolver:FailoverDataConnector" minOccurs="0" />
                </sequence>
                <attribute name="noRetryDelay" type="string">
                    <annotation>
                        <documentation>Time to bypass connector after a failure before trying it again.</documentation>
                    </annotation>
                </attribute>
                <attribute name="springResources" type="string">
                    <annotation>
                        <documentation>Locations of Spring resource configurations.</documentation>
                    </annotation>
                </attribute>
                <attribute name="springResourcesRef" type="string">
                    <annotation>
                        <documentation>Bean Name of locations of Spring resource configurations.</documentation>
                    </annotation>
                </attribute>
                <attribute name="factoryPostProcessorsRef" type="string">
                    <annotation>
                        <documentation>Bean Name of locations of bean factory post processors resource configurations.  Defaults to shibboleth.PropertySourcesPlaceholderConfigurer.</documentation>
                    </annotation>
                </attribute>
                <attribute name="postProcessorsRef" type="string">
                    <annotation>
                        <documentation>Bean Name of a list of bean post processors.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <element name="PrincipalConnector" type="resolver:BasePrincipalConnectorType">
        <annotation>
            <documentation>
                Principal connectors convert a subject's NameID into an internal principal
                name for use within attribute definitions and data connectors.
            </documentation>
        </annotation>
    </element>
    <complexType name="BasePrincipalConnectorType">
        <annotation>
            <documentation>
                Principal connectors convert a subject's NameID into an internal principal
                name for use within attribute definitions and data connectors.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseResolutionPlugInType">
                <sequence>
                    <element name="RelyingParty" type="string" minOccurs="0"
                        maxOccurs="unbounded">
                        <annotation>
                            <documentation>
                                The relying party for which this connector is valid.
                            </documentation>
                        </annotation>
                    </element>
                </sequence>
                <attribute name="nameIDFormat" type="string" use="required">
                    <annotation>
                        <documentation>
                            The format of the NameID for which this connector is valid.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="FlattenedBaseResolutionPlugInType" abstract="true">
        <annotation>
            <documentation>
                A base type for all attribute resolver plugins: data and principal
                connectors and attribute definitions
            </documentation>
        </annotation>
        <attribute name="id" type="string" use="required">
            <annotation>
                <documentation>A unique identifier for this definition.</documentation>
            </annotation>
        </attribute>
        <attribute name="activationConditionRef" type="string">
            <annotation>
                <documentation>
                    A reference to a predicate to decide whether this plugin is applicable
                </documentation>
            </annotation>
        </attribute>
        <attribute name="profileContextStrategyRef" type="string">
            <annotation>
                <documentation>
                    A reference to a function to locate the profile context
                </documentation>
            </annotation>
        </attribute>
    </complexType>


    <complexType name="BaseResolutionPlugInType" abstract="true">
        <annotation>
            <documentation>
                A base type for all legacy attribute resolver plugins
            </documentation>
        </annotation>
        <complexContent>
        <extension base="resolver:FlattenedBaseResolutionPlugInType">
            <sequence>
                <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />
            </sequence>
        </extension>        
        </complexContent>
    </complexType>

    <element name="Dependency" type="resolver:PluginDependencyType">
        <annotation>
            <documentation>
                Defines a dependency on a specific resolution plug-in.
            </documentation>
        </annotation>
    </element>
    <element name="FailoverDataConnector" type="resolver:PluginDependencyType">
        <annotation>
            <documentation>
                Defines a data connector to use should the parent data connector fail.
            </documentation>
        </annotation>
    </element>
    <complexType name="PluginDependencyType">
        <annotation>
            <documentation>A type that represents a reference to another plugin</documentation>
        </annotation>
        <attribute name="ref" type="string" use="required" />
    </complexType>

    <complexType name="LocalizedStringType">
        <simpleContent>
            <extension base="string">
                <attribute ref="xml:lang" />
            </extension>
        </simpleContent>
    </complexType>
    
    <!--  Flatten the ad: namespace into the resolver: namespace -->
    
    <complexType name="ContextDerivedAttribute">
        <annotation>
            <documentation>A attribute definition to pull attribute values from anywhere in the PRC tree</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="attributeValuesFunctionRef" type="string" use="required">
                    <annotation>
                        <documentation>The Function to generate the Attribute Values given a PRC</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="CryptoTransientId">
        <annotation>
            <documentation>An attribute definition used to construct stateless transient subject identifiers.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="dataSealerRef" type="string" use="required">
                    <annotation>
                        <documentation>Object used to protect and encrypt identifiers</documentation>
                    </annotation>
                </attribute>
                <attribute name="lifetime" type="string">
                    <annotation>
                        <documentation>Lifetime of issued identifiers</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="Prescoped">
        <annotation>
            <documentation>
                An attribute definition that splits the values of the source attribute into an attribute value 
                with a value and scope.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
                <attribute name="scopeDelimiter" type="string">
                    <annotation>
                        <documentation>Delimiter between the value and scope.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
 
    <complexType name="PrincipalAuthenticationMethod">
        <annotation>
            <documentation>Exposes the principal's authentication method as an attribute definition.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
            </extension>
        </complexContent>
     </complexType>

    <complexType name="PrincipalName">
        <annotation>
            <documentation>Exposes the principal's name as an attribute definition.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
            </extension>            
        </complexContent>
    </complexType>
    
        <complexType name="RegexSplit">
        <annotation>
            <documentation>An attribute definition that splits the source attribute's values based on a regular expression.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
                <attribute name="regex" type="string" use="required">
                    <annotation>
                        <documentation>The regular expression used to split a value.</documentation>
                    </annotation>
                </attribute>
                <attribute name="caseSensitive" type="string">
                    <annotation>
                        <documentation>
                            A boolean flag indicating the case sensitivity of the regular expression.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML1NameIdentifier">
        <annotation>
            <documentation>An attribute definition that creates attributes whose values are SAML 1 NameIdentifiers.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
                <attribute name="nameIdFormat" type="string">
                    <annotation>
                        <documentation>The SAML 1 NameFormat of the NameID.</documentation>
                    </annotation>
                </attribute>
                <attribute name="nameIdQualifier" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 1 NameQualifier of the NameID.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML2NameID">
        <annotation>
            <documentation>An attribute definition that creates attributes whose values are SAML 2 NameIDs.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
                <attribute name="nameIdFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the NameID.</documentation>
                    </annotation>
                </attribute>
                <attribute name="nameIdQualifier" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 NameQualifier of the NameID.</documentation>
                    </annotation>
                </attribute>
                <attribute name="nameIdSPQualifier" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 SPNameQualifier of the NameID.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="Scoped">
        <annotation>
            <documentation>A basic attribute definition which supports attribute scoping.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
                <attribute name="scope" type="string" use="required">
                    <annotation>
                        <documentation>Value to use for scoping the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="Script">
        <annotation>
            <documentation>
                An attribute definition that constructs its attributes by means of a script supported by JSR-223. The
                script is provided all the edu.internet2.middleware.shibboleth.common.attribute.Attribute object
                resolved from all the definitions dependencies. The resultant attribute definition must then be bound to
                a script attribute corresponding to the script variable whose name is the ID of the definition. This
                variable is injected into the script by the attribute definition.
                
                NOTE that in this version Script does not have a sourceAttributeID - all the values for scripts
                come from the Dependency elements.
            </documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                        <element name="Script" type="string">
                            <annotation>
                                <documentation>The script to evaluate to construct the attribute.</documentation>
                            </annotation>
                        </element>
                        <element name="ScriptFile" type="string">
                            <annotation>
                                <documentation>
                                    The filesystem path to the script to evaluate to construct the attribute.
                                </documentation>
                            </annotation>
                        </element>
                    </choice>
                </sequence>
                <attribute name="language" type="string">
                    <annotation>
                        <documentation>
                            The JSR-233 name for the scripting language that will be used. By default "javascript" is
                            supported.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="customObjectRef" type="string">
                    <annotation>
                        <documentation>
                            The name of a bean defined somewhere else which will be injected into the script as an
                            object called "custom".  If not supplied, nothing is injected.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="Simple">
        <annotation>
            <documentation>A basic attribute definition.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element ref="resolver:Dependency" minOccurs="0" maxOccurs="unbounded" />                
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="sourceAttributeID" type="string"/>
            </extension>
        </complexContent>
    </complexType>
    
    <complexType name="SubjectDerivedAttribute">
        <annotation>
            <documentation>A attribute definition to pull attribute values from the Principals.  A short cut looks at IdPAttributePrincipals</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="attributeValuesFunctionRef" type="string" >
                    <annotation>
                        <documentation>Provides a plug in point to allow general extraction of values from Principals.  Incompatible with idpAttributeName</documentation>
                    </annotation>
                </attribute>

                <attribute name="principalAttributeName" type="string" >
                    <annotation>
                        <documentation>The id of the IdPAttribute contained within a IdPAttributePrincipal to look for.  Incompatible with attributeValueEngineRef.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    
        <complexType name="TransientId">
        <annotation>
            <documentation>A attribute definition used to construct transient subject identifiers.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:FlattenedBaseAttributeDefinitionType">
                <sequence>
                    <choice maxOccurs="unbounded" minOccurs="0">
                        <element name="DisplayName" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded" /> 
                        <element name="DisplayDescription" type="resolver:LocalizedStringType" minOccurs="0" maxOccurs="unbounded"/>
                        <element ref="resolver:AttributeEncoder" minOccurs="0" maxOccurs="unbounded" />
                    </choice>
                </sequence>
                <attribute name="storageServiceRef" type="string" default="shibboleth.StorageService">
                    <annotation>
                        <documentation>Storage service used to store created identifiers</documentation>
                    </annotation>
                </attribute>
                <attribute name="lifetime" type="string">
                    <annotation>
                        <documentation>Lifetime of issued identifiers</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    

    <!--  Flatten the enc: namespace into the resolver: namespace -->    
    
    <!-- Encoders that produce SAML 1 or SAML 2 Attributes -->
    <complexType name="SAML1String">
        <annotation>
            <documentation>Defines a SAML 1 string encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="namespace" type="string">
                    <annotation>
                        <documentation>The SAML 1 Namespace of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML1Base64">
        <annotation>
            <documentation>Defines a SAML 1 Base64 encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="namespace" type="string">
                    <annotation>
                        <documentation>The SAML 1 Namespace of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    
    <complexType name="SAML1XMLObject">
        <annotation>
            <documentation>Defines a SAML 1 Base64 encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="namespace" type="string">
                    <annotation>
                        <documentation>The SAML 1 Namespace of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML2String">
        <annotation>
            <documentation>Defines a SAML 2 string encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the attribute.</documentation>
                    </annotation>
                </attribute>
                <attribute name="friendlyName" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 FriendlyName of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML2Base64">
        <annotation>
            <documentation>Defines a SAML 2 Base64 encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the attribute.</documentation>
                    </annotation>
                </attribute>
                <attribute name="friendlyName" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 FriendlyName of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
    
    <complexType name="SAML2XMLObject">
        <annotation>
            <documentation>Defines a SAML 2 Base64 encoder for an attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the attribute.</documentation>
                    </annotation>
                </attribute>
                <attribute name="friendlyName" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 FriendlyName of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="BaseScopedAttributeEncoderType">
        <annotation>
            <documentation>Defines an encoder for a scoped attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="scopeType" type="string" use="optional">
                    <annotation>
                        <documentation>
                            The type of scoping to use for the encoded attribute. Valid values are "inline" or
                            "attribute".
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="scopeDelimiter" type="string" use="optional">
                    <annotation>
                        <documentation>
                            If scopeType is "inline", this is the delimeter used between the attribute value and
                            scope.
                        </documentation>
                    </annotation>
                </attribute>
                <attribute name="scopeAttribute" type="string" use="optional">
                    <annotation>
                        <documentation>
                            If scopeType is "attribute", this is the name of the name of the attribute used to carry the
                            scope value.
                        </documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML1ScopedString">
        <annotation>
            <documentation>Defines a SAML 1 string encoder for a scoped attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseScopedAttributeEncoderType">
                <attribute name="namespace" type="string">
                    <annotation>
                        <documentation>The SAML 1 Namespace of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML2ScopedString">
        <annotation>
            <documentation>Defines a SAML 2 string encoder for a scoped attribute.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseScopedAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the attribute.</documentation>
                    </annotation>
                </attribute>
                <attribute name="friendlyName" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 FriendlyName of the attribute.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <!-- Encoders that produce SAML 1 or 2 name identifiers -->
    
    <complexType name="SAML1StringNameIdentifier">
        <annotation>
            <documentation>Defines a SAML 1 string encoder for a NameIdentifier.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 1 NameFormat of the NameIdentifier.</documentation>
                    </annotation>
                </attribute>
                <attribute name="nameQualifier" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 1 NameQualfier of the NameIdentifier.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="SAML2StringNameID">
        <annotation>
            <documentation>Defines a SAML 2 string encoder for a NameID.</documentation>
        </annotation>
        <complexContent>
            <extension base="resolver:BaseAttributeEncoderType">
                <attribute name="nameFormat" type="string">
                    <annotation>
                        <documentation>The SAML 2 NameFormat of the NameID.</documentation>
                    </annotation>
                </attribute>
                <attribute name="nameQualifier" type="string" use="optional">
                    <annotation>
                        <documentation>The SAML 2 NameQualfier of the NameID.</documentation>
                    </annotation>
                </attribute>
            </extension>
        </complexContent>
    </complexType>
</schema>
