##
## Velocity Template containing logout propagation machinery.
##
## Velocity context will contain the following properties
## flowExecutionUrl - the form action location
## flowRequestContext - the Spring Web Flow RequestContext
## flowExecutionKey - the SWF execution key (this is built into the flowExecutionUrl)
## profileRequestContext - root of context tree
## logoutContext - context with SPSession details for logout operation
## multiRPContext - context with RelyingPartyContexts and possibly SP UI information from the metadata
## htmlEncoder - HTMLEncoder class
## urlEncoder - urlEncoder class
## codecUtil - CodecUtil class
## request - HttpServletRequest
## response - HttpServletResponse
## environment - Spring Environment object for property resolution
## custom - arbitrary object injected by deployer
##

#if ($logoutContext and !$logoutContext.getSessionMap().isEmpty())
    <ol>
        #foreach ($sp in $logoutContext.getSessionMap().keySet())
            #set ($rpCtx = $multiRPContext.getRelyingPartyContextById($sp))
            #if ($rpCtx)
                #set ($rpUIContext = $rpCtx.getSubcontext("net.shibboleth.idp.ui.context.RelyingPartyUIContext"))
            #end
            #if ($rpUIContext and $rpUIContext.getServiceName())
                <li id="result_$codecUtil.hex($sp.getBytes())" title="Logout pending">$htmlEncoder.encodeForHTML($rpUIContext.getServiceName())</li>
            #else
                <li id="result_$codecUtil.hex($sp.getBytes())" title="Logout pending">$htmlEncoder.encodeForHTML($sp)</li>
            #end
        #end
    </ol>
    <script src="$request.getContextPath()/js/jquery-2.1.4.min.js"></script>
    <script>
        function onLoad(src, target, sessionKey) {
            try {
                var content = src.contents().text();
                target.removeClass("success failure");
                if (content && jQuery.parseJSON(content).result == "Success") {
                    target.addClass("success");
                    target.prop("title", "Successful logout")
                } else {
                    target.addClass("failure");
                    target.prop("title", "Failed logout")
                }
            } catch (e) {
                target.addClass("failure");
                target.prop("title", "Failed logout")
            }
            if (typeof(Storage) !== "undefined" ) {
                var url = sessionStorage.getItem(sessionKey);
                if (url != null) {
                    sessionStorage.removeItem(sessionKey);
                    setTimeout(function() { src.prop("src", url) }, 1500);
                }
            }
        }
    </script>
    #foreach ($sp in $logoutContext.getSessionMap().keySet())
        #foreach ($session in $logoutContext.getSessions($sp))
            #set ($skey = $session.getSPSessionKey())
            #if ($flowSelector.apply($session))
                <iframe id="sender_$codecUtil.hex($skey.getBytes())"
                    src="$request.contextPath/profile/PropagateLogout?SessionKey=$urlEncoder.encode($skey)"
                    style="display:none" onload="onLoad($(this), $('#result_$codecUtil.hex($sp.getBytes())'), '$skey')"></iframe>
            #end
        #end
    #end
#end

<!-- If SAML logout, complete the flow by adding a hidden iframe. -->
#if ( $profileRequestContext.getProfileId().contains("saml2/logout") )
    <iframe style="display:none" src="$flowExecutionUrl&_eventId=proceed">
#end
