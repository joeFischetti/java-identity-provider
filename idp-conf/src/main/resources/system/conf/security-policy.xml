<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">

    <!--
    This file configures the default security rules used in processing inbound messages. These can be overridden
    on a per-profile and per-relying party basis, but are the typical defaults.
    -->
    
    <util:list id="shibboleth.ShibbolethSSOSecurityPolicy">
        <bean class="org.opensaml.saml.common.binding.security.impl.MessageReplaySecurityHandler" scope="prototype"
            p:replayCache-ref="shibboleth.ReplayCache" />

        <bean class="org.opensaml.saml.common.binding.security.impl.MessageLifetimeSecurityHandler" scope="prototype" />

        <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryIssuer" scope="prototype">
            <property name="issuerLookupStrategy">
                <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextIssuerFunction" />
            </property>
        </bean>
    </util:list>

    <util:list id="shibboleth.SAML1AttributeQuerySecurityPolicy">
        <bean class="org.opensaml.saml.common.binding.security.impl.ReceivedEndpointSecurityHandler" scope="prototype">
            <property name="httpServletRequest" ref="shibboleth.HttpServletRequest" />
        </bean>
        
        <bean class="org.opensaml.saml.common.binding.security.impl.MessageReplaySecurityHandler" scope="prototype">
            <property name="replayCache" ref="shibboleth.ReplayCache" />
        </bean>
        
        <bean class="org.opensaml.saml.common.binding.security.impl.MessageLifetimeSecurityHandler" scope="prototype" />
        
        <bean class="org.opensaml.saml.common.binding.security.impl.SAMLMDClientCertAuthSecurityHandler" scope="prototype">
            <property name="httpServletRequest" ref="shibboleth.HttpServletRequest" />
            <property name="trustEngine" ref="shibboleth.X509TrustEngine" />
            <property name="certificateNameOptions">
                <bean class="org.opensaml.security.messaging.impl.CertificateNameOptions"
                    p:evaluateSubjectCommonName="true" />
            </property>
        </bean>

        <bean class="org.opensaml.saml.common.binding.security.impl.SAMLProtocolMessageXMLSignatureSecurityHandler" scope="prototype">
            <property name="trustEngine" ref="shibboleth.SignatureTrustEngine" />
        </bean>
        
        <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryIssuer" scope="prototype">
            <property name="issuerLookupStrategy">
                <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextIssuerFunction" />
            </property>
        </bean>

        <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryAuthentication" scope="prototype">
            <property name="authenticationLookupStrategy">
                <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextAuthenticationFunction" />
            </property>
        </bean>
    </util:list>

    <util:list id="shibboleth.SAML2SSOSecurityPolicy">
        <bean class="org.opensaml.saml.common.binding.security.impl.ReceivedEndpointSecurityHandler" scope="prototype">
            <property name="httpServletRequest" ref="shibboleth.HttpServletRequest" />
        </bean>
        
        <bean class="org.opensaml.saml.common.binding.security.impl.MessageReplaySecurityHandler" scope="prototype">
            <property name="replayCache" ref="shibboleth.ReplayCache" />
        </bean>
        
        <bean class="org.opensaml.saml.common.binding.security.impl.MessageLifetimeSecurityHandler" scope="prototype" />
        
        <bean class="org.opensaml.saml.saml2.binding.security.impl.SAML2AuthnRequestsSignedSecurityHandler" scope="prototype" />
        
        <bean class="org.opensaml.saml.common.binding.security.impl.SAMLProtocolMessageXMLSignatureSecurityHandler" scope="prototype">
            <property name="trustEngine" ref="shibboleth.SignatureTrustEngine" />
        </bean>
        
        <bean class="org.opensaml.saml.saml2.binding.security.impl.SAML2HTTPRedirectDeflateSignatureSecurityHandler" scope="prototype">
            <property name="trustEngine" ref="shibboleth.SignatureTrustEngine" />
            <property name="httpServletRequest" ref="shibboleth.HttpServletRequest" />
        </bean>
        
        <bean class="org.opensaml.saml.saml2.binding.security.impl.SAML2HTTPPostSimpleSignSecurityHandler" scope="prototype">
            <property name="trustEngine" ref="shibboleth.SignatureTrustEngine" />
            <property name="httpServletRequest" ref="shibboleth.HttpServletRequest" />
            <property name="parser" ref="shibboleth.ParserPool" />
            <property name="keyInfoResolver" ref="shibboleth.KeyInfoCredentialResolver" />
        </bean>
        
        <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryIssuer" scope="prototype">
            <property name="issuerLookupStrategy">
                <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextIssuerFunction" />
            </property>
        </bean>
    </util:list>
    
    <util:list id="shibboleth.SAML2AttributeQuerySecurityPolicy">
        <bean class="org.opensaml.saml.common.binding.security.impl.ReceivedEndpointSecurityHandler" scope="prototype">
            <property name="httpServletRequest" ref="shibboleth.HttpServletRequest" />
        </bean>
        
        <bean class="org.opensaml.saml.common.binding.security.impl.MessageReplaySecurityHandler" scope="prototype">
            <property name="replayCache" ref="shibboleth.ReplayCache" />
        </bean>
        
        <bean class="org.opensaml.saml.common.binding.security.impl.MessageLifetimeSecurityHandler" scope="prototype" />
        
        <bean class="org.opensaml.saml.common.binding.security.impl.SAMLMDClientCertAuthSecurityHandler" scope="prototype">
            <property name="httpServletRequest" ref="shibboleth.HttpServletRequest" />
            <property name="trustEngine" ref="shibboleth.X509TrustEngine" />
            <property name="certificateNameOptions">
                <bean class="org.opensaml.security.messaging.impl.CertificateNameOptions"
                    p:evaluateSubjectCommonName="true" />
            </property>
        </bean>

        <bean class="org.opensaml.saml.common.binding.security.impl.SAMLProtocolMessageXMLSignatureSecurityHandler" scope="prototype">
            <property name="trustEngine" ref="shibboleth.SignatureTrustEngine" />
        </bean>
        
        <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryIssuer" scope="prototype">
            <property name="issuerLookupStrategy">
                <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextIssuerFunction" />
            </property>
        </bean>

        <bean class="org.opensaml.messaging.handler.impl.CheckMandatoryAuthentication" scope="prototype">
            <property name="authenticationLookupStrategy">
                <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLMessageContextAuthenticationFunction" />
            </property>
        </bean>
    </util:list>

    <!-- TODO: remove once we get real metadata config in place -->
    <bean id="ExampleMetadata" class="org.springframework.core.io.FileSystemResource" c:path="${idp.home}/metadata/example-metadata.xml" />
    <bean id="ExampleMetadataResolver" class="org.opensaml.saml.metadata.resolver.impl.FilesystemMetadataResolver"
            p:parserPool-ref="shibboleth.ParserPool">
        <constructor-arg>
            <util:property-path path="ExampleMetadata.File" />
        </constructor-arg>
    </bean>
    
    <!-- TODO: all this is probably wrong, but need it to get something working -->
    
    <bean id="shibboleth.MetadataCredentialResolver" class="org.opensaml.saml.security.impl.MetadataCredentialResolver">
        <constructor-arg>
            <bean class="org.opensaml.saml.metadata.resolver.impl.BasicRoleDescriptorResolver"
                c:mdResolver-ref="ExampleMetadataResolver" />
        </constructor-arg>
    </bean>

    <bean id="shibboleth.GlobalSecurityConfiguration" class="org.opensaml.xmlsec.SecurityConfigurationSupport"
        factory-method="getGlobalXMLSecurityConfiguration" />
    
    <bean id="shibboleth.KeyInfoCredentialResolver" factory-bean="shibboleth.GlobalSecurityConfiguration"
        factory-method="getDefaultKeyInfoCredentialResolver" />

    <bean id="shibboleth.SignatureTrustEngine" class="org.opensaml.xmlsec.signature.support.impl.ExplicitKeySignatureTrustEngine">
        <constructor-arg ref="shibboleth.MetadataCredentialResolver" />
        <constructor-arg ref="shibboleth.KeyInfoCredentialResolver" />
    </bean>

    <bean id="shibboleth.X509TrustEngine" class="org.opensaml.security.trust.impl.ExplicitX509CertificateTrustEngine">
        <constructor-arg ref="shibboleth.MetadataCredentialResolver" />
    </bean>

</beans>
