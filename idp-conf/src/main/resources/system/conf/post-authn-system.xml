<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">

    <import resource="../../conf/post-authn.xml" />

    <!-- Parent bean for post-authn interceptor flows. -->
    <bean id="shibboleth.PostAuthnFlow" abstract="true"
            class="net.shibboleth.idp.profile.interceptor.ProfileInterceptorFlowDescriptor" />

    <!-- Parent bean for attribute consent flows. -->
    <bean id="shibboleth.consent.AttributeReleaseFlow" abstract="true"
            class="net.shibboleth.idp.consent.flow.ar.AttributeReleaseFlowDescriptor"
            p:activationCondition-ref="shibboleth.consent.RelyingPartyPredicate"
            p:storageService-ref="shibboleth.ClientStorageService"
            p:doNotRememberConsentAllowed="false"
            p:globalConsentAllowed="false"
            p:perAttributeConsentEnabled="false"
            p:compareValues="true"
            p:lifetime="P1Y"
            scope="prototype" />

    <!-- Parent bean for terms of use consent flows. -->
    <bean id="shibboleth.consent.TermsOfUseFlow" abstract="true"
            class="net.shibboleth.idp.consent.flow.ConsentFlowDescriptor"
            p:activationCondition-ref="shibboleth.consent.RelyingPartyPredicate"
            p:storageService-ref="shibboleth.ClientStorageService"
            p:compareValues="true"
            p:lifetime="P1Y"
            scope="prototype" />

    <bean id="shibboleth.consent.UserStorageKey"
        class="net.shibboleth.idp.consent.logic.AttributeValueLookupFunction"
        c:userAttributeId-ref="shibboleth.consent.UserIdentifierAttributeId"
        scope="prototype" />

    <bean id="shibboleth.consent.UserAndRelyingPartyStorageKey"
        class="net.shibboleth.idp.consent.logic.JoinFunction"
        c:functionA-ref="shibboleth.consent.UserStorageKey"
        c:functionB-ref="shibboleth.RelyingPartyIdLookup.Simple"
        scope="prototype" />

    <!-- Attribute consent predicate. -->
    <bean id="shibboleth.consent.AttributeConsent.AttributePredicate"
            class="net.shibboleth.idp.consent.logic.AttributePredicate"
            c:whitelist-ref="shibboleth.attribute-release.WhitelistedAttributeIDs"
            c:blacklist-ref="shibboleth.attribute-release.BlacklistedAttributeIDs"
            c:matchExpression="#{getObject('shibboleth.attribute-release.MatchExpression')}"
            scope="prototype" />

</beans>