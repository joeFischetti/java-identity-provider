<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">

    <context:property-placeholder location="file:///${idp.home}/conf/idp.properties" />

    <!-- This BeanPostProcessor auto-sets identifiable beans with the bean name (if not already set). -->
    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />

    <bean id="entityID" class="java.lang.String" c:_0="${idp.entityID}" />

    <!-- Pulls together the various components that feed the resolver. -->
    <bean class="net.shibboleth.idp.relyingparty.impl.DefaultRelyingPartyConfigurationResolver"
        p:anonymousConfiguration-ref="shibboleth.AnonymousRelyingParty"
        p:defaultConfiguration-ref="shibboleth.DefaultRelyingParty"
        p:relyingPartyConfigurations-ref="shibboleth.RelyingPartyOverrides"
        p:defaultSecurityConfiguration-ref="shibboleth.DefaultSecurityConfiguration" />

    <!-- Parent bean for generic RelyingParty overrides that establishes defaults. -->
    <bean id="RelyingParty" abstract="true" class="net.shibboleth.idp.relyingparty.RelyingPartyConfiguration"
        p:responderId-ref="entityID" p:detailedErrors="${idp.errors.detailed:false}" />

    <!-- Parent bean for RelyingParty overrides based on activation by name(s). -->
    <bean id="RelyingPartyByName" abstract="true"
        class="net.shibboleth.idp.saml.relyingparty.impl.RelyingPartyConfigurationSupport" factory-method="byName"
        p:responderId-ref="entityID" p:detailedErrors="${idp.errors.detailed:false}" />

    <!-- Parent bean for RelyingParty overrides based on activation by group. -->
    <bean id="RelyingPartyByGroup" abstract="true"
        class="net.shibboleth.idp.saml.relyingparty.impl.RelyingPartyConfigurationSupport" factory-method="byGroup"
        p:responderId-ref="entityID" p:detailedErrors="${idp.errors.detailed:false}" />

    <!-- Default Profile Configurations, also usable as parent beans in overrides. -->
    
    <bean id="Shibboleth.SSO"
        class="net.shibboleth.idp.saml.saml1.profile.config.BrowserSSOProfileConfiguration"
        p:inboundSubflowId="security-policy/shibboleth-sso" />

    <bean id="SAML1.AttributeQuery"
        class="net.shibboleth.idp.saml.saml1.profile.config.AttributeQueryProfileConfiguration"
        p:inboundSubflowId="security-policy/soap" />

    <bean id="SAML1.ArtifactResolution"
        class="net.shibboleth.idp.saml.saml1.profile.config.ArtifactResolutionProfileConfiguration"
        p:inboundSubflowId="security-policy/soap" />

    <bean id="SAML2.SSO"
        class="net.shibboleth.idp.saml.saml2.profile.config.BrowserSSOProfileConfiguration"
        p:inboundSubflowId="security-policy/saml2-sso" />

    <bean id="SAML2.ECP"
        class="net.shibboleth.idp.saml.saml2.profile.config.ECPProfileConfiguration" />

    <bean id="SAML2.AttributeQuery"
        class="net.shibboleth.idp.saml.saml2.profile.config.AttributeQueryProfileConfiguration"
        p:inboundSubflowId="security-policy/soap" />

    <bean id="SAML2.ArtifactResolution"
        class="net.shibboleth.idp.saml.saml2.profile.config.ArtifactResolutionProfileConfiguration"
        p:inboundSubflowId="security-policy/soap" />
    
    <bean id="Liberty.SSOS"
        class="net.shibboleth.idp.saml.idwsf.profile.config.SSOSProfileConfiguration" />    
    
    <!--
    Security Configuration Defaults
    
    These settings establish the default security configurations for signatures and encryption
    and loads the default credentials used.
    -->

    <bean id="shibboleth.DefaultSecurityConfiguration" class="net.shibboleth.idp.profile.config.SecurityConfiguration">
    
        <property name="signatureSigningConfiguration">
            <bean class="org.opensaml.xmlsec.impl.BasicSignatureSigningConfiguration"
                    p:signingCredentials-ref="shibboleth.DefaultSigningCredential">
                <property name="signatureAlgorithms">
                    <util:list>
                        <util:constant
                            static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_RSA_SHA256" />
                        <util:constant
                            static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_SIGNATURE_ECDSA_SHA256" />
                    </util:list>
                </property>
                <property name="signatureReferenceDigestMethods">
                    <util:list>
                        <util:constant
                            static-field="org.opensaml.xmlsec.signature.support.SignatureConstants.ALGO_ID_DIGEST_SHA256" />
                    </util:list>
                </property>
            </bean>
        </property>
        
        <property name="encryptionConfiguration">
            <bean class="org.opensaml.xmlsec.impl.BasicEncryptionConfiguration">
                <property name="dataEncryptionAlgorithms">
                    <util:list>
                        <util:constant
                            static-field="org.opensaml.xmlsec.encryption.support.EncryptionConstants.ALGO_ID_BLOCKCIPHER_AES128" />
                    </util:list>
                </property>
                <property name="keyTransportEncryptionAlgorithms">
                    <util:list>
                        <util:constant
                            static-field="org.opensaml.xmlsec.encryption.support.EncryptionConstants.ALGO_ID_KEYTRANSPORT_RSAOAEP" />
                    </util:list>
                </property>
            </bean>
        </property>

        <property name="decryptionConfiguration">
            <bean class="org.opensaml.xmlsec.impl.BasicDecryptionConfiguration"
                p:KEKKeyInfoCredentialResolver-ref="defaultKeyEncryptionCredentialResolver"
                p:encryptedKeyResolver-ref="defaultEncryptedKeyResolver" />
        </property>

    </bean>

    <!-- Defines decryption keys, along with support for optimizing lookup based on KeyInfo hints. -->
    <bean id="defaultKeyEncryptionCredentialResolver" class="org.opensaml.xmlsec.keyinfo.impl.ChainingKeyInfoCredentialResolver">
        <constructor-arg>
            <util:list>
                <bean class="org.opensaml.xmlsec.keyinfo.impl.LocalKeyInfoCredentialResolver">
                    <constructor-arg name="localCredentialResolver">
                        <bean class="org.opensaml.xmlsec.keyinfo.impl.CollectionKeyInfoCredentialResolver"
                            c:credentials-ref="shibboleth.DefaultEncryptionCredentials" />
                    </constructor-arg>
                    <constructor-arg name="keyInfoProviders">
                        <util:list>
                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.RSAKeyValueProvider" />
                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.DSAKeyValueProvider" />
                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.DEREncodedKeyValueProvider" />
                            <bean class="org.opensaml.xmlsec.keyinfo.impl.provider.InlineX509DataProvider" />
                        </util:list>
                    </constructor-arg>
                </bean>
                <bean class="org.opensaml.xmlsec.keyinfo.impl.StaticKeyInfoCredentialResolver"
                    c:credentials-ref="shibboleth.DefaultEncryptionCredentials" />
            </util:list>
        </constructor-arg>
    </bean>
    
    <!-- Defines how the system locates EncryptedKey elements sent in messages containing encrypted objects. -->
    <bean id="defaultEncryptedKeyResolver" class="org.opensaml.xmlsec.encryption.support.ChainingEncryptedKeyResolver"
            c:recipient-ref="entityID">
        <constructor-arg name="encKeyResolvers">
            <util:list>
                <bean class="org.opensaml.xmlsec.encryption.support.InlineEncryptedKeyResolver" />
                <bean class="org.opensaml.saml.saml2.encryption.EncryptedElementTypeEncryptedKeyResolver" />
                <bean class="org.opensaml.xmlsec.encryption.support.SimpleRetrievalMethodEncryptedKeyResolver" />
                <bean class="org.opensaml.xmlsec.encryption.support.SimpleKeyInfoReferenceEncryptedKeyResolver" />
            </util:list>
        </constructor-arg>
    </bean>

</beans>
