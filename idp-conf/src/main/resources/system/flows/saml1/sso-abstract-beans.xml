<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context classpath:/org/springframework/context/config/spring-context-3.2.xsd
                           http://www.springframework.org/schema/util classpath:/org/springframework/beans/factory/xml/spring-util-3.2.xsd"
    default-init-method="initialize"
    default-destroy-method="destroy">

    <context:property-placeholder location="file://${idp.home}/conf/idp.properties" />

    <!-- Note: The DecodeMessage and EncodeMessage actions are defined in the non-abstract beans definition file. -->

    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />

    <bean
        id="HandleInboundMessage"
        class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor"
        scope="prototype"
        c:messageHandler-ref="inboundMessageHandlerChain"
        c:executionDirection="INBOUND" />

    <bean
        id="inboundMessageHandlerChain"
        class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain"
        scope="prototype">
        <property name="handlers">
            <util:list>
                <!-- TODO inbound handlers -->
                <!-- TODO CheckMandatoryIssuer ? -->
            </util:list>
        </property>
    </bean>

    <bean
        id="HandleOutboundMessage"
        class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor"
        scope="prototype"
        c:messageHandler-ref="outboundMessageHandlerChain"
        c:executionDirection="OUTBOUND" />

    <bean
        id="outboundMessageHandlerChain"
        class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain"
        scope="prototype">
        <property name="handlers">
            <util:list>
                <!-- TODO outbound handlers -->
            </util:list>
        </property>
    </bean>

    <bean
        id="InitializeProfileRequestContext"
        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext"
        p:profileId="#{T(net.shibboleth.idp.saml.profile.config.saml1.BrowserSSOProfileConfiguration).PROFILE_ID}" />

    <bean
        id="InitializeRelyingPartyContext"
        class="net.shibboleth.idp.profile.impl.InitializeRelyingPartyContext" />

    <bean
        id="SelectRelyingPartyConfiguration"
        class="net.shibboleth.idp.profile.impl.SelectRelyingPartyConfiguration"
        scope="prototype"
        c:resolver-ref="RelyingPartyConfigurationResolver" />

    <bean
        id="RelyingPartyConfigurationResolver"
        class="net.shibboleth.idp.relyingparty.impl.RelyingPartyConfigurationResolver"
        p:id="RelyingPartyConfigurationResolver"
        p:relyingPartyConfigurations-ref="RelyingPartyConfiguration" />

    <bean
        id="SecurityConfiguration"
        class="net.shibboleth.idp.profile.config.SecurityConfiguration" />

    <bean
        id="SAML1BrowserSSOProfileConfiguration"
        class="net.shibboleth.idp.saml.profile.config.saml1.BrowserSSOProfileConfiguration"
        p:securityConfiguration-ref="SecurityConfiguration" />

    <!-- TODO replace with eventual relying-party.xml config -->
    <bean
        id="RelyingPartyConfiguration"
        class="net.shibboleth.idp.relyingparty.RelyingPartyConfiguration"
        p:id="ActivatedRelyingPartyConfiguration"
        p:responderId="https://idp.example.org"
        p:detailedErrors="true"
        p:profileConfigurations-ref="SAML1BrowserSSOProfileConfiguration"
        p:activationCondition-ref="AlwaysTruePredicate" />

    <bean
        id="SelectProfileConfiguration"
        class="net.shibboleth.idp.profile.impl.SelectProfileConfiguration"
        scope="prototype" />

    <bean
        id="InitializeAuthenticationContext"
        class="net.shibboleth.idp.saml.impl.profile.InitializeAuthenticationContext"
        scope="prototype" />

    <bean
        id="InitializeRequestedPrincipalContext"
        class="net.shibboleth.idp.authn.impl.InitializeRequestedPrincipalContext"
        scope="prototype" />

    <!-- TODO make constructor arg names consistent for resolution and filtering -->
    <bean
        id="ResolveAttributes"
        class="net.shibboleth.idp.profile.impl.ResolveAttributes"
        c:resolverService-ref="shibboleth.AttributeResolverService" />

    <bean
        id="FilterAttributes"
        class="net.shibboleth.idp.profile.impl.FilterAttributes"
        c:service-ref="shibboleth.AttributeFilterService" />

    <bean
        id="UpdateSessionWithSPSession"
        class="net.shibboleth.idp.session.impl.UpdateSessionWithSPSession"
        scope="prototype"
        p:enabled="${idp.session.enabled}"
        p:sessionManager-ref="shibboleth.SessionManager"
        p:sessionLifetime="${idp.session.defaultSPlifetime}" />

    <bean
        id="InitializeOutboundMessageContext"
        class="net.shibboleth.idp.saml.impl.profile.saml1.InitializeOutboundMessageContext" />

    <bean
        id="AddResponseShell"
        class="net.shibboleth.idp.saml.impl.profile.saml1.AddResponseShell" />

    <bean
        id="AddAuthenticationStatementToAssertion"
        class="net.shibboleth.idp.saml.impl.profile.saml1.AddAuthenticationStatementToAssertion" />

    <bean
        id="AddAttributeStatementToAssertion"
        class="net.shibboleth.idp.saml.impl.profile.saml1.AddAttributeStatementToAssertion" />

    <bean
        id="DefaultSAML1NameIdentifierGenerator"
        class="net.shibboleth.idp.saml.impl.nameid.DefaultSAML1NameIdentifierGenerator"
        p:format="urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified">
        <property name="attributeSourceIds">
            <util:list>
                <value>uid</value>
            </util:list>
        </property>
    </bean>

    <bean
        id="SAML1NameIdentifierGenerator"
        class="net.shibboleth.idp.saml.impl.nameid.DefaultSAML1NameIdentifierGenerator"
        p:format="urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress">
        <property name="attributeSourceIds">
            <util:list>
                <value>email</value>
            </util:list>
        </property>
    </bean>

    <bean
        id="AddNameIdentifierToSubjects"
        class="org.opensaml.saml.saml1.profile.impl.AddNameIdentifierToSubjects"
        p:defaultNameIDGenerator-ref="DefaultSAML1NameIdentifierGenerator">
        <property name="nameIdentifierGenerators">
            <util:list>
                <ref bean="SAML1NameIdentifierGenerator" />
            </util:list>
        </property>
    </bean>

    <bean
        id="AddSubjectConfirmationToSubjects"
        class="org.opensaml.saml.saml1.profile.impl.AddSubjectConfirmationToSubjects">
        <property name="methods">
            <util:list>
                <value>urn:oasis:names:tc:SAML:1.0:cm:bearer</value>
            </util:list>
        </property>
    </bean>

    <bean
        id="AddNotBeforeConditionToAssertions"
        class="net.shibboleth.idp.saml.impl.profile.saml1.AddNotBeforeConditionToAssertions" />

    <bean
        id="AddNotOnOrAfterConditionToAssertions"
        class="net.shibboleth.idp.saml.impl.profile.saml1.AddNotOnOrAfterConditionToAssertions" />

    <bean
        id="AddAudienceRestrictionToAssertions"
        class="net.shibboleth.idp.saml.impl.profile.saml1.AddAudienceRestrictionToAssertions" />

    <!-- TODO only a stub action -->
    <bean
        id="SignAssertions"
        class="net.shibboleth.idp.saml.impl.profile.saml1.SignAssertions" />

    <bean
        id="RecordResponseComplete"
        class="net.shibboleth.idp.profile.impl.RecordResponseComplete" />


    <!-- TODO The following are temporary. -->

    <bean
        id="AlwaysTruePredicate"
        class="com.google.common.base.Predicates"
        factory-method="alwaysTrue" />

</beans>
