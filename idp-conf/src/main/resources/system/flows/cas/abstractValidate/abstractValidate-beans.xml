<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd"
       default-init-method="initialize">

    <import resource="../common-beans.xml" />

    <!-- Action beans -->
    <bean id="initializeProfileRequestContext"
          class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext"
          p:profileId="#{T(net.shibboleth.idp.cas.config.ValidateConfiguration).PROFILE_ID}"
          p:loggingId="%{idp.service.logging.cas:SSO}"
          p:browserProfile="false" />

    <bean id="initializeValidateAction"
          class="net.shibboleth.idp.cas.flow.InitializeValidateAction" />

    <bean id="validateTicketAction"
          class="net.shibboleth.idp.cas.flow.ValidateTicketAction"
          c:ticketService-ref="cas.TicketService" />

    <bean id="validateRenewAction"
          class="net.shibboleth.idp.cas.flow.ValidateRenewAction" />

    <bean id="checkProxyAuthorizationAction"
          class="net.shibboleth.idp.cas.flow.CheckProxyAuthorizationAction" />

    <bean id="validateProxyCallbackAction"
          class="net.shibboleth.idp.cas.flow.ValidateProxyCallbackAction"
          c:proxyAuthenticator-ref="cas.ProxyAuthenticator"
          c:ticketService-ref="cas.TicketService" />

    <bean id="principalLookupFunction"
          class="com.google.common.base.Functions"
          factory-method="compose">
        <constructor-arg index="0">
            <bean class="net.shibboleth.idp.session.context.navigate.SessionContextPrincipalLookupFunction" />
        </constructor-arg>
        <constructor-arg index="1">
            <bean class="org.opensaml.messaging.context.navigate.ChildContextLookup"
                  c:type="net.shibboleth.idp.session.context.SessionContext" />
        </constructor-arg>
    </bean>

    <bean id="resolveAttributes"
          class="net.shibboleth.idp.profile.impl.ResolveAttributes"
          scope="prototype"
          c:resolverService-ref="shibboleth.AttributeResolverService"
          p:maskFailures="%{idp.service.attribute.resolver.maskFailures:true}"
          p:principalNameLookupStrategy-ref="principalLookupFunction" />

    <bean id="filterAttributes"
          class="net.shibboleth.idp.profile.impl.FilterAttributes"
          scope="prototype"
          c:filterService-ref="shibboleth.AttributeFilterService"
          p:maskFailures="%{idp.service.attribute.filter.maskFailures:true}"
          p:principalNameLookupStrategy-ref="principalLookupFunction" />

    <bean id="extractAttributesAction"
          class="net.shibboleth.idp.cas.flow.ExtractAttributesAction" />

    <bean id="updateIdPSessionWithSPSessionAction"
          class="net.shibboleth.idp.cas.flow.UpdateIdPSessionWithSPSessionAction"
          c:lifetime="%{idp.session.defaultSPlifetime:PT2H}" />

</beans>