<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="
          http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
      abstract="true">

    <action-state id="InitializeRelyingParty">
        <evaluate expression="PublishProtocolRequest" />
        <evaluate expression="BuildRelyingPartyContext" />
        <evaluate expression="BuildSAMLMetadataContext" />
        <evaluate expression="SelectRelyingPartyConfiguration" />
        <evaluate expression="SelectProfileConfiguration" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="ValidateTicket" />
    </action-state>

    <action-state id="ValidateTicket">
        <evaluate expression="ValidateTicket" />
        <transition on="InvalidTicketFormat" to="ValidateFailure" />
        <transition on="ServiceMismatch" to="ValidateFailure" />
        <transition on="TicketExpired" to="ValidateFailure" />
        <transition on="TicketRetrievalError" to="ValidateFailure" />
        <transition on="ServiceTicketValidated" to="ValidateIdPSession" />
        <transition on="ProxyTicketValidated" to="HandleValidProxyTicket" />
    </action-state>

    <action-state id="ValidateIdPSession">
        <evaluate expression="ValidateIdPSession" />
        <evaluate expression="'proceed'" />
        <transition on="SessionRetrievalError" to="ValidateFailure" />
        <transition on="SessionExpired" to="ValidateFailure" />
        <transition on="proceed" to="ValidateRenew" />
    </action-state>

    <action-state id="ValidateRenew">
        <evaluate expression="ValidateRenew" />
        <evaluate expression="'proceed'" />
        <transition on="TicketNotFromRenew" to="ValidateFailure" />
        <transition on="RenewIncompatibleWithProxy" to="ValidateFailure" />
        <transition on="proceed" to="CheckForProxy" />
    </action-state>

    <decision-state id="CheckForProxy">
        <if test="requestScope.ticketValidationRequest.pgtUrl != null"
            then="ValidateProxyCallback"
            else="ResolveAttributes"/>
    </decision-state>

    <action-state id="ValidateProxyCallback">
        <evaluate expression="CheckProxyAuthorization" />
        <evaluate expression="ValidateProxyCallback" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="ResolveAttributes" />
        <transition on="ProxyCallbackAuthenticationFailure" to="ValidateFailure" />
        <transition on="TicketCreationError" to="ValidateFailure" />
    </action-state>

    <action-state id="ResolveAttributes">
        <evaluate expression="PopulateSubjectContext" />
        <evaluate expression="ResolveAttributes" />
        <evaluate expression="FilterAttributes" />
        <evaluate expression="ExtractAttributes" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="UpdateIdPSessionWithSPSession" />
    </action-state>

    <action-state id="UpdateIdPSessionWithSPSession">
        <evaluate expression="UpdateIdPSessionWithSPSession" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="ValidateSuccess" />
    </action-state>

    <!-- View end states -->
    <end-state id="ValidateSuccess" view="cas/validateSuccess">
        <on-entry>
            <evaluate expression="PublishProtocolResponse" />
            <set name="flashScope.userName" value="requestScope.ticketValidationResponse.userName" />
            <set name="flashScope.attributes" value="requestScope.ticketValidationResponse.attributes" />
            <set name="flashScope.pgtIou" value="requestScope.ticketValidationResponse.pgtIou" />
            <set name="flashScope.proxies" value="requestScope.ticketValidationResponse.proxies" />
            <set name="flashScope.escapeUtils" value="T(org.apache.commons.lang.StringEscapeUtils)" />
        </on-entry>
    </end-state>

    <end-state id="ValidateFailure" view="cas/validateFailure">
        <on-entry>
            <set name="flashScope.code" value="currentEvent.attributes.code?:'INTERNAL_ERROR'" />
            <set name="flashScope.detailCode" value="currentEvent.attributes.detailCode?:'E_ILLEGAL_STATE'" />
        </on-entry>
        <exception-handler bean="RethrowingFlowExecutionExceptionHandler"/>
    </end-state>

    <global-transitions>
        <transition on-exception="java.lang.RuntimeException" to="ValidateFailure">
            <evaluate expression="T(org.slf4j.LoggerFactory).getLogger('net.shibboleth.idp.cas').error('Uncaught runtime exception', flowExecutionException.getCause())" />
        </transition>
        <transition on="#{currentEvent.id.startsWith('Invalid') or currentEvent.id.startsWith('Unable')}"
                    to="ValidateFailure" />
        <transition on="IllegalState" to="ValidateFailure" />
        <transition on="ProtocolViolation" to="ValidateFailure" />
    </global-transitions>
</flow>