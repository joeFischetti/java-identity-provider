<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
    default-init-method="initialize"
    default-destroy-method="destroy">

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
        p:placeholderPrefix="%{" p:placeholderSuffix="}" />

    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />

    <!-- Declares audit field extractor functions injected into beans that populate the audit context. -->
    <import resource="../../conf/audit-system.xml" />
    
    <bean id="InitializeProfileRequestContext"
        class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext" scope="prototype"
        p:profileId="http://shibboleth.net/ns/profiles/resolvertest"
        p:loggingId="%{idp.service.logging.resolvertest:ResolverTest}" />

    <bean id="CheckAccess"
        class="org.opensaml.profile.action.impl.CheckAccess" scope="prototype"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
        p:accessControlService-ref="shibboleth.AccessControlService"
        p:policyName="%{idp.resolvertest.accessPolicy}" />
        
    <bean id="DecodeMessage" class="org.opensaml.profile.action.impl.DecodeMessage" scope="prototype">
        <constructor-arg>
            <bean class="%{idp.resolvertest.decoderClass:net.shibboleth.idp.profile.impl.ResolverTestRequestDecoder}"
                    scope="prototype">
                <property name="httpServletRequest" ref="shibboleth.HttpServletRequest" />
            </bean>
        </constructor-arg>
    </bean>
    
    <bean id="PostDecodePopulateAuditContext"
            class="net.shibboleth.idp.profile.audit.impl.PopulateAuditContext" scope="prototype"
            p:format="%{idp.service.logging.audit:%T|%b|%I|%SP|%P|%IDP|%bb|%III|%u|%ac|%attr|%n|%i}">
        <property name="fieldExtractors">
            <map>
                <entry>
                    <key>
                        <util:constant static-field="net.shibboleth.idp.saml.profile.SAMLAuditFields.PROTOCOL"/>
                    </key>
                    <bean class="com.google.common.base.Functions" factory-method="compose">
                        <constructor-arg name="g">
                            <bean class="com.google.common.base.Functions" factory-method="compose">
                                <constructor-arg name="g">
                                    <bean class="org.opensaml.saml.common.messaging.context.navigate.SAMLProtocolContextProtocolFunction" />
                                </constructor-arg>
                                <constructor-arg name="f">
                                    <ref bean="shibboleth.ChildLookup.SAMLProtocolContext" />
                                </constructor-arg>
                            </bean>
                        </constructor-arg>
                        <constructor-arg name="f">
                            <ref bean="shibboleth.MessageContextLookup.Inbound" />
                        </constructor-arg>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>
    
    <bean id="SAMLMetadataLookup"
            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
            c:executionDirection="INBOUND">
        <constructor-arg name="messageHandler">
            <bean class="org.opensaml.saml.common.binding.impl.SAMLMetadataLookupHandler" scope="prototype">
                <property name="roleDescriptorResolver">
                    <bean class="org.opensaml.saml.metadata.resolver.impl.BasicRoleDescriptorResolver"
                        c:mdResolver-ref="shibboleth.MetadataResolver" />
                </property>
            </bean>
        </constructor-arg>
    </bean>
    
    <bean id="SAMLPopulateAttributeConsumingService"
            class="net.shibboleth.idp.profile.impl.WebFlowMessageHandlerAdaptor" scope="prototype"
            c:executionDirection="INBOUND">
        <constructor-arg name="messageHandler">
            <bean class="org.opensaml.saml.common.binding.impl.SAMLAddAttributeConsumingServiceHandler" scope="prototype" />
        </constructor-arg>
    </bean>

    <bean id="InitializeRelyingPartyContexFromSAMLPeer"
        class="net.shibboleth.idp.saml.profile.impl.InitializeRelyingPartyContextFromSAMLPeer" scope="prototype" />

    <bean id="SelectRelyingPartyConfiguration"
        class="net.shibboleth.idp.profile.impl.SelectRelyingPartyConfiguration" scope="prototype"
        p:relyingPartyConfigurationResolver-ref="shibboleth.RelyingPartyConfigurationResolver" />
    
    <bean id="PostLookupPopulateAuditContext"
        class="net.shibboleth.idp.profile.audit.impl.PopulateAuditContext" scope="prototype"
        p:fieldExtractors-ref="shibboleth.PostLookupAuditExtractors"
        p:format="%{idp.service.logging.audit:%T|%b|%I|%SP|%P|%IDP|%bb|%III|%u|%ac|%attr|%n|%i}" />

    <bean id="PopulateSubjectContext"
            class="net.shibboleth.idp.profile.impl.PopulateSubjectContext" scope="prototype">
        <property name="principalNameLookupStrategy">
            <bean class="net.shibboleth.idp.profile.impl.ResolverTestPrincipalLookup" />
        </property>
    </bean>

    <bean id="ResolveAttributes" class="net.shibboleth.idp.profile.impl.ResolveAttributes" scope="prototype"
        c:resolverService-ref="shibboleth.AttributeResolverService" />

    <bean id="FilterAttributes" class="net.shibboleth.idp.profile.impl.FilterAttributes" scope="prototype"
        c:filterService-ref="shibboleth.AttributeFilterService" />
        
    <util:map id="ProtocolStateMap">
        <entry>
            <key>
                <null/>
            </key>
            <value>ResponseView</value>
        </entry>
        <entry>
            <key>
                <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML11P_NS" />
            </key>
            <value>EncodeToSAML1</value>
        </entry>
        <entry>
            <key>
                <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
            </key>
            <value>EncodeToSAML2</value>
        </entry>
    </util:map>
    
    <bean id="PostAssertionPopulateAuditContext"
        class="net.shibboleth.idp.profile.audit.impl.PopulateAuditContext" scope="prototype"
        p:fieldExtractors-ref="shibboleth.PostAssertionAuditExtractors"
        p:format="%{idp.service.logging.audit:%T|%b|%I|%SP|%P|%IDP|%bb|%III|%u|%ac|%attr|%n|%i}" />
    
    <bean id="PostResponsePopulateAuditContext"
        class="net.shibboleth.idp.profile.audit.impl.PopulateAuditContext" scope="prototype"
        p:fieldExtractors-ref="shibboleth.PostResponseAuditExtractors"
        p:format="%{idp.service.logging.audit:%T|%b|%I|%SP|%P|%IDP|%bb|%III|%u|%ac|%attr|%n|%i}" />
    
    <bean id="WriteAuditLog" class="net.shibboleth.idp.profile.audit.impl.WriteAuditLog" scope="prototype"
        p:activationCondition-ref="shibboleth.ProfileAuditingCondition"
        p:format="%{idp.service.logging.audit:%T|%b|%I|%SP|%P|%IDP|%bb|%III|%u|%ac|%attr|%n|%i}" />

</beans>
