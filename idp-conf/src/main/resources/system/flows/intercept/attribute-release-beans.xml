<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:c="http://www.springframework.org/schema/c"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"

    default-init-method="initialize" default-destroy-method="destroy">

    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />

   <bean id="AttributeReleaseConsentFunction" class="net.shibboleth.idp.consent.flow.ar.AttributeReleaseConsentFunction" scope="prototype" />

    <bean id="AttributeConsentFlowDescriptorLookupStrategy" class="net.shibboleth.idp.consent.logic.FlowDescriptorLookup" scope="prototype"
        c:type="#{ T(net.shibboleth.idp.consent.flow.ar.AttributeReleaseFlowDescriptor) }" />

    <bean id="GlobalAttributeConsentPredicate" class="net.shibboleth.idp.consent.logic.GlobalAttributeConsentPredicate" scope="prototype" />

    <bean id="InitializeConsentContext" class="net.shibboleth.idp.consent.flow.InitializeConsentContext" scope="prototype" />

    <bean id="InitializeAttributeConsentContext" class="net.shibboleth.idp.consent.flow.ar.InitializeAttributeReleaseContext" scope="prototype" />

    <bean id="PopulateAttributeConsentContext" class="net.shibboleth.idp.consent.flow.ar.PopulateAttributeReleaseContext" scope="prototype"
        p:attributePredicate-ref="shibboleth.consent.AttributeConsent.AttributePredicate" />

    <bean id="PopulateConsentContext" class="net.shibboleth.idp.consent.flow.PopulateConsentContext" scope="prototype"
        c:currentConsentsFunction-ref="AttributeReleaseConsentFunction"  />
        
    <bean id="SetRPUIInformation" class="net.shibboleth.idp.ui.impl.SetRPUIInformation" scope="prototype"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />

    <bean id="RevokeConsent" class="net.shibboleth.idp.consent.flow.storage.RevokeConsent"  scope="prototype"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndRelyingPartyStorageKey"/>

    <bean id="RevokeGlobalAttributeConsent" class="net.shibboleth.idp.consent.flow.storage.RevokeConsent" scope="prototype"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserStorageKey" />

    <bean id="ReadConsentFromStorage" class="net.shibboleth.idp.consent.flow.storage.ReadConsentFromStorage" scope="prototype"
        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndRelyingPartyStorageKey" />

    <bean id="ReadGlobalAttributeConsentFromStorage" class="net.shibboleth.idp.consent.flow.storage.ReadConsentFromStorage" scope="prototype"
        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserStorageKey" />

    <bean id="IsConsentRequiredPredicate" class="net.shibboleth.idp.consent.logic.IsConsentRequiredPredicate" scope="prototype" />

    <bean id="ExtractConsent" class="net.shibboleth.idp.consent.flow.ExtractConsent" scope="prototype"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest" />

    <bean id="CreateResult" class="net.shibboleth.idp.consent.flow.storage.CreateResult" scope="prototype"
        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserAndRelyingPartyStorageKey" />

    <bean id="CreateGlobalConsentResult" class="net.shibboleth.idp.consent.flow.storage.CreateGlobalConsentResult" scope="prototype" 
        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserStorageKey" />

    <bean id="ReleaseAttributes" class="net.shibboleth.idp.consent.flow.ar.ReleaseAttributes" scope="prototype" />

    <bean id="UpdateStorageIndex" class="net.shibboleth.idp.consent.flow.storage.UpdateStorageIndex" scope="prototype"
        p:storageKeyLookupStrategy-ref="shibboleth.consent.UserStorageKey" />

</beans>