<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-init-method="initialize"
       default-destroy-method="destroy">

    <context:property-placeholder location="file://${idp.home}/conf/idp.properties" />
    
    <!-- Note: Don't define DecodeMessage action here, that is defined in beans definition for concrete flow. -->

    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
    <bean class="net.shibboleth.idp.spring.IdentifiableBeanPostProcessor" />

    <bean id="InitializeProfileRequestContext" class="net.shibboleth.idp.profile.impl.InitializeProfileRequestContext">
        <property name="profileId">
            <util:constant static-field="net.shibboleth.idp.saml.profile.config.saml2.BrowserSSOProfileConfiguration.PROFILE_ID" />
        </property>
    </bean>
    
    <bean id="inboundMessageHandlerChain" class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
        <property name="handlers">
            <util:list>
                <bean class="org.opensaml.saml.common.binding.CheckMessageVersionHandler" />
                
                <bean class="org.opensaml.saml.common.binding.SAMLProtocolAndRoleHandler">
                    <property name="protocol">
                        <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML20P_NS" />
                    </property>
                    <property name="role">
                        <util:constant static-field="org.opensaml.saml.saml2.metadata.SPSSODescriptor.DEFAULT_ELEMENT_NAME" />
                    </property>
                </bean>
                
                <!-- TODO: need to poke metadata source in from relying party config later -->
                <bean class="org.opensaml.saml.common.binding.SAMLMetadataLookupHandler">
                    <property name="roleDescriptorResolver">
                        <bean class="org.opensaml.saml.metadata.resolver.impl.BasicRoleDescriptorResolver"
                            c:mdResolver-ref="ExampleMetadataResolver" />
                    </property>
                </bean>
            </util:list>
        </property>
    </bean>

    <!-- TODO replace with eventual relying-party.xml config -->
    <bean
        id="SecurityConfiguration"
        class="net.shibboleth.idp.profile.config.SecurityConfiguration" />
    <bean
        id="SAML2BrowserSSOProfileConfiguration"
            class="net.shibboleth.idp.saml.profile.config.saml2.BrowserSSOProfileConfiguration"
            p:securityConfiguration-ref="SecurityConfiguration">
        <property name="inboundHandler">
            <bean class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain"
                p:handlers-ref="shibboleth.SAML2SSOSecurityPolicy" />
        </property>
    </bean>
    <bean
        id="RelyingPartyConfiguration"
        class="net.shibboleth.idp.relyingparty.RelyingPartyConfiguration"
        p:id="ActivatedRelyingPartyConfiguration"
        p:responderId="https://idp.example.org"
        p:detailedErrors="true"
        p:profileConfigurations-ref="SAML2BrowserSSOProfileConfiguration" />
        
    <alias name="shibboleth.OutgoingSAML2SSOBindings" alias="shibboleth.OutgoingBindings"/>
        
    <bean id="AddResponseShell" class="org.opensaml.saml.saml2.profile.impl.AddResponseShell" scope="prototype"
            p:issuerLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple">
        <property name="identifierGeneratorLookupStrategy">
            <bean class="net.shibboleth.idp.profile.config.navigate.IdentifierGenerationStrategyLookupFunction" />
        </property>
    </bean>

    <bean id="AddAuthnStatementToAssertion"
        class="net.shibboleth.idp.saml.impl.profile.saml2.AddAuthnStatementToAssertion" scope="prototype" />

    <bean id="AddAttributeStatementToAssertion"
        class="net.shibboleth.idp.saml.impl.profile.saml2.AddAttributeStatementToAssertion" scope="prototype" />

    <bean id="AddNameIDToSubjects"
            class="org.opensaml.saml.saml2.profile.impl.AddNameIDToSubjects" scope="prototype"
            p:defaultNameIDGenerator="#{getObject('shibboleth.LegacySAML2NameIdentifierGenerator')}"
            p:nameIDGenerators-ref="shibboleth.SAML2NameIDGenerators">
        <property name="formatLookupStrategy">
            <bean class="net.shibboleth.idp.saml.impl.profile.logic.DefaultNameIdentifierFormatStrategy" />
        </property>
        <property name="nameIDPolicyPredicate">
            <bean class="org.opensaml.saml.common.profile.impl.logic.AffiliationNameIDPolicyPredicate"
                    p:metadataResolver-ref="ExampleMetadataResolver"
                    p:responderIdLookupStrategy-ref="shibboleth.ResponderIdLookup.Simple"
                    p:requesterIdLookupStrategy-ref="shibboleth.RelyingPartyIdLookup.Simple">
                <property name="objectLookupStrategy">
                    <bean class="org.opensaml.saml.saml2.profile.impl.AddNameIDToSubjects.NameIDPolicyLookupFunction" />
                </property>
            </bean>
        </property>
    </bean>

    <bean id="AddSubjectConfirmationToSubjects"
        class="org.opensaml.saml.saml2.profile.impl.AddSubjectConfirmationToSubjects" scope="prototype"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
        p:method="urn:oasis:names:tc:SAML:2.0:cm:bearer" />

    <bean id="UpdateSessionWithSPSession"
            class="net.shibboleth.idp.session.impl.UpdateSessionWithSPSession" scope="prototype"
            p:enabled="${idp.session.enabled}"
            p:sessionManager-ref="shibboleth.SessionManager">
        <property name="SPSessionCreationStrategy">
            <bean class="net.shibboleth.idp.saml.impl.session.SAML2SPSessionCreationStrategy"
                c:lifetime="${idp.session.defaultSPlifetime}"/>
        </property>
    </bean>

    <bean id="outboundMessageHandlerChain"
            class="org.opensaml.messaging.handler.impl.BasicMessageHandlerChain" scope="prototype">
        <property name="handlers">
            <util:list>
                <!-- TODO outbound handlers -->
                <bean class="org.opensaml.saml.common.binding.SAMLOutboundDestinationHandler" />
                <bean class="org.opensaml.saml.common.binding.security.EndpointUrlSchemeSecurityHandler" />
                <bean class="org.opensaml.saml.common.binding.security.SAMLOutboundProtocolMessageSigningHandler" />
            </util:list>
        </property>
    </bean>
    
</beans>