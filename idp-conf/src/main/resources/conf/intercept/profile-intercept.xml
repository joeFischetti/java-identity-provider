<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">

    <!-- Flows executed after authentication. -->
    <util:list id="shibboleth.InterceptFlows">

        <bean id="intercept/context-check" parent="shibboleth.InterceptFlow" />

        <bean id="intercept/terms-of-use" parent="shibboleth.consent.TermsOfUseFlow" />

        <bean id="intercept/attribute-release" parent="shibboleth.consent.AttributeReleaseFlow"
             p:doNotRememberConsentAllowed="true" 
             p:globalConsentAllowed="true"
             p:perAttributeConsentEnabled="true" />

    </util:list>

    <!-- Condition to evaluate to interrupt SSO flows to obtain consent. -->
    <bean id="shibboleth.consent.Condition" class="com.google.common.base.Predicates" factory-method="alwaysTrue" />
    
    <!-- TODO Per relying party condition will be moved elsewhere.
    <bean id="shibboleth.consent.Condition" parent="shibboleth.Conditions.RelyingPartyId">
        <constructor-arg>
            <list>
                <value>https://sp.example.org</value>
            </list>
        </constructor-arg>
    </bean>
    -->

    <!-- The ID of the attribute to be used as the user identifier when storing consent records. -->
    <!-- TODO add property to properties file -->
    <!-- TODO doc -->
    <bean id="shibboleth.consent.UserIdentifierAttributeId" class="java.lang.String"
        c:_0="%{idp.consent.userIdentifierAttributeId:email}" />


    <!-- Attribute release whitelist, blacklist, and match expression to determine 
        whether consent should be obtained for an attribute based on the attribute ID. -->
    <util:list id="shibboleth.attribute-release.WhitelistedAttributeIDs">
        <!--
        <value>email</value>
        -->
    </util:list>

    <util:list id="shibboleth.attribute-release.BlacklistedAttributeIDs">
        <value>transientId</value>
        <value>persistentId</value>
        <value>eduPersonTargetedID</value>
    </util:list>

    <!-- 
    <bean id="shibboleth.attribute-release.MatchExpression" class="java.util.regex.Pattern" factory-method="compile" 
        c:regex="^exampleAttribute.*$" />
     -->

    <!--
    Condition to evaluate to interrupt SSO flows to check the state of the transaction before allowing.
    
    Typically the flow itself will be activated based on configuration in relying-party.xml, and this controls
    whether to proceed if the flow is activated.
    -->
    <bean id="shibboleth.context-check.Condition" parent="shibboleth.Conditions.AND">
        <constructor-arg>
            <list>
                <bean parent="shibboleth.Conditions.RelyingPartyId" c:candidates="#{ 'https://sp.example.org' }" />
                <bean class="net.shibboleth.idp.profile.logic.SimpleAttributePredicate">
                    <property name="attributeValueMap">
                        <map>
                            <entry key="eppn">
                                <list>
                                    <value>*</value>
                                </list>
                            </entry>
                        </map>
                    </property>
                </bean>
            </list>
        </constructor-arg>
    </bean>

</beans>