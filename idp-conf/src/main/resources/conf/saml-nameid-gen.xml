<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">

    <context:property-placeholder location="file://${idp.home}/conf/idp.properties" />

    <!-- This BeanPostProcessor auto-sets identifiable beans with the bean name (if not already set). -->
    <bean class="net.shibboleth.ext.spring.config.IdentifiableBeanPostProcessor" />

    <!-- ========================= SAML NameID Generation ========================= -->

    <!--
    These generator lists handle NameID/Nameidentifier generation going forward. By default,
    transient IDs for both SAML versions are enabled. The other examples are for persistent IDs
    and generating more one-off formats based on resolved attributes. A suggested approach is to
    control their use via release of the underlying source attribute in the filter policy rather
    than here, but you can set a property on any generator called "activationCondition" to limit
    use. 
    -->
    
    <!-- SAML 2 NameID Generation -->
    <util:list id="shibboleth.SAML2NameIDGenerators">
    
        <bean id="transient" class="net.shibboleth.idp.saml.nameid.impl.TransientSAML2NameIDGenerator"
            p:transientIdGenerator-ref="${idp.transientId.generator}" />
            
        <bean id="persistent" class="net.shibboleth.idp.saml.nameid.impl.PersistentSAML2NameIDGenerator"
            p:attributeSourceIds="#{ {'${idp.persistentId.sourceAttribute}'} }"
            p:persistentIdGenerator-ref="${idp.persistentId.generator}" />

        <bean id="email" class="net.shibboleth.idp.saml.nameid.impl.AttributeSourcedSAML2NameIDGenerator"
            p:format="urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
            p:attributeSourceIds="#{ {'email'} }" />
                
    </util:list>

    <!-- SAML 1 NameIdentifier Generation -->
    <util:list id="shibboleth.SAML1NameIdentifierGenerators">
    
        <bean id="transient" class="net.shibboleth.idp.saml.nameid.impl.TransientSAML1NameIdentifierGenerator"
            p:transientIdGenerator-ref="${idp.transientId.generator}" />

        <bean id="email" class="net.shibboleth.idp.saml.nameid.impl.AttributeSourcedSAML1NameIdentifierGenerator"
            p:format="urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress"
            p:attributeSourceIds="#{ {'email'} }" />
                
    </util:list>
    
    <!--
    These two beans enable legacy support for NameID generation in the Attribute Resolver.
    If you don't need that (or this is a new install) you can remove them.
    -->
    <bean id="shibboleth.LegacySAML1NameIdentifierGenerator"
        class="net.shibboleth.idp.saml.nameid.impl.LegacySAML1NameIdentifierGenerator" />
    <bean id="shibboleth.LegacySAML2NameIDGenerator"
        class="net.shibboleth.idp.saml.nameid.impl.LegacySAML2NameIDGenerator" />
    
    <!-- DO NOT EDIT -->
    
    <bean id="shibboleth.StoredTransientIdGenerator"
        class="net.shibboleth.idp.saml.nameid.impl.StoredTransientIdGenerationStrategy"
        p:idStore-ref="shibboleth.StorageService" />

    <bean id="shibboleth.CryptoTransientIdGenerator"
        class="net.shibboleth.idp.saml.nameid.impl.CryptoTransientIdGenerationStrategy"
        p:dataSealer-ref="shibboleth.DataSealer" />

    <bean id="shibboleth.ComputedPersistentIdGenerator"
        class="net.shibboleth.idp.saml.nameid.impl.ComputedPersistentIdGenerationStrategy"
        p:salt="${idp.persistentId.salt}" p:algorithm="${idp.persistentId.algorithm}" />

    <bean id="shibboleth.StoredPersistentIdGenerator" lazy-init="true"
        class="net.shibboleth.idp.saml.nameid.impl.StoredPersistentIdGenerationStrategy"
        p:computedIdStrategy-ref="shibboleth.ComputedPersistentIdGenerator"
        p:IDStore-ref="${idp.persistentId.store}" />
    
    <bean class="net.shibboleth.idp.saml.nameid.impl.NameIdentifierGenerationServiceImpl">
        <property name="SAML1NameIdentifierGenerator">
            <bean class="org.opensaml.saml.saml1.profile.impl.ChainingSAML1NameIdentifierGenerator"
                p:generators-ref="shibboleth.SAML1NameIdentifierGenerators"
                p:defaultGenerator="#{getObject('shibboleth.LegacySAML1NameIdentifierGenerator')}" />    
        </property>
        <property name="SAML2NameIDGenerator">
            <bean class="org.opensaml.saml.saml2.profile.impl.ChainingSAML2NameIDGenerator"
                p:generators-ref="shibboleth.SAML2NameIDGenerators"
                p:defaultGenerator="#{getObject('shibboleth.LegacySAML2NameIDGenerator')}" />    
        </property>
    </bean>
        
</beans>
