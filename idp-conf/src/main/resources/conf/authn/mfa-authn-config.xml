<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">

    <!--
    This is a map of transition rules that guide the behavior of the MFA flow
    and controls how factors are sequenced, skipped, etc. The key of each entry
    is the name of the flow out of which control is passing. The initial "exit"
    point corresponds to an empty key.
    
    Each entry is a bean inherited from "shibboleth.authn.MFA.Transition". Per
    the Javadoc for net.shibboleth.idp.authn.MultiFactorAuthenticationTransition:
    
        p:completionCondition (Predicate<ProfileRequestContext>)
            - Controls when to successfully exit the MFA flow.
                
        p:resultMergingStrategy (Function<ProfileRequestContext,AuthenticationResult>)
            - Combines all the sub-results into a single result.
            
        p:nextFlow (String)
            - A flow to run if the previous one signaled a "proceed" event, for simple
                transitions.
            
        p:nextFlowStrategyMap (Map<String,Object> where Object is String or Function<ProfileRequestContext,String>)
            - A hyper-flexible way of expressing rules for flow control. Map is keyed
                by a previously signaled event and the value is a flow to run or a
                function to return the flow to run.
                
        p:flowParameterMap (Map<String,Object>)
            - Allows arbitrary objects to be passed into the context tree for access within flows.
    -->
    <util:map id="shibboleth.authn.MFA.TransitionMap">
        <entry key="">
            <bean parent="shibboleth.authn.MFA.Transition"
                p:nextFlow="authn/IPAddress" />
        </entry>
        <entry key="authn/IPAddress">
            <bean parent="shibboleth.authn.MFA.Transition"
                p:nextFlow="authn/Password" />
        </entry>
    </util:map>

</beans>
